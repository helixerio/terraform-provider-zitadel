version: 2
archives:
  - formats: ["zip"]
    name_template: "terraform-provider-zitadel_{{ .Version }}_{{ .Os }}_{{ .Arch }}"

before:
  hooks:
    - go mod tidy

builds:
  - env:
      # This is mandatory as goreleaser does not work with CGO!
      - CGO_ENABLED=0
    mod_timestamp: "{{ .CommitTimestamp }}"
    flags:
      - -trimpath
      - -buildvcs=false
    ldflags:
      - "-s -w -X main.version={{.Version}} -X main.commit={{.Commit}}"
    goos:
      - darwin
      - linux
    goarch:
      - amd64
      - arm64
    no_unique_dist_dir: true
    binary: "terraform-provider-zitadel_{{ .Version }}_{{ .Os }}_{{ .Arch }}/terraform-provider-zitadel_v{{ .Version }}"

checksum:
  extra_files:
    - name_template: "terraform-provider-zitadel_{{ .Version }}_manifest.json"
  name_template: "terraform-provider-zitadel_{{ .Version }}_SHA256SUMS"
  algorithm: sha256

signs:
  - artifacts: checksum
    args:
      # if you are using this in a GitHub action or some other automated pipeline, you
      # need to pass the batch flag to indicate its not interactive.
      - "--batch"
      - "--local-user"
      - "{{ .Env.GPG_FINGERPRINT }}" # set this environment variable for your signing key
      - "--output"
      - "${signature}"
      - "--detach-sign"
      - "${artifact}"

release:
  extra_files:
    - name_template: "terraform-provider-zitadel_{{ .Version }}_manifest.json"
  draft: true

changelog:
  disable: true

snapshot:
  version_template: '{{ trimprefix .Env.RELEASE_VERSION "v" }}'
